/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package User;

import Dao.PurchaseDao;
import Dao.Statistics;
import Dao.UserDao;
import java.awt.Color;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author giaba
 */
public class PurchaseDetails extends javax.swing.JFrame {

    /**
     * Creates new form PurchaseDetails
     */
    Statistics statistics = new Statistics();
    PurchaseDao pd = new PurchaseDao();
    UserDao user = new UserDao();
    Color textPrimaryColor = new Color(102, 120, 138);
    Color primaryColor = new Color(42, 58, 73);
    int xx, xy;
    int rowIndex;
    SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
    Date date = new Date();
    private int uId;
    DefaultTableModel model;

    public PurchaseDetails() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablePurchaseDetails = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        txtIDPurchase = new javax.swing.JTextField();
        txtReceivedDate = new javax.swing.JTextField();
        txtCurrentDate = new javax.swing.JTextField();
        btnHoanTien = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });

        TablePurchaseDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID mua", "ID sách", "Tên sách", "Số lượng", "Giá", "Tổng", "Ngày mua", "Ngày nhận", "Tên nhà cung cấp", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablePurchaseDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablePurchaseDetailsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TablePurchaseDetails);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("X");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });

        txtSearch.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        txtIDPurchase.setEditable(false);
        txtIDPurchase.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        txtReceivedDate.setEditable(false);
        txtReceivedDate.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        txtCurrentDate.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        btnHoanTien.setBackground(new java.awt.Color(153, 0, 0));
        btnHoanTien.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnHoanTien.setForeground(new java.awt.Color(255, 255, 255));
        btnHoanTien.setText("Hoàn tiền");
        btnHoanTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHoanTienActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(153, 0, 0));
        btnClear.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("Làm lại");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ID mua hàng");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Ngày nhận");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Ngày hiện tại");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Tìm kiếm sảm phẩm");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtIDPurchase)
                        .addComponent(txtReceivedDate)
                        .addComponent(txtCurrentDate)
                        .addComponent(btnHoanTien, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                        .addComponent(btnClear, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(474, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIDPurchase, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtReceivedDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCurrentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(btnHoanTien, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void init() {
        txtCurrentDate.setText(df.format(date));
        uId = user.getUserId(UserDashboard.userEmail.getText());
        ProductTable();
        setLocation(450, 120);
    }

    private void ProductTable() {
        pd.getProductsValue(TablePurchaseDetails, "", uId);
        model = (DefaultTableModel) TablePurchaseDetails.getModel();
        TablePurchaseDetails.setRowHeight(30);
        TablePurchaseDetails.setShowGrid(true);
        TablePurchaseDetails.setGridColor(Color.BLACK);
        TablePurchaseDetails.setBackground(Color.WHITE);
        TablePurchaseDetails.setSelectionBackground(Color.LIGHT_GRAY);
    }

    private void clear() {
        txtSearch.setText("");
        txtIDPurchase.setText("");
        txtReceivedDate.setText("");
        TablePurchaseDetails.clearSelection();
    }

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        setVisible(false);
        UserDashboard.PanelPurchaseDetails.setBackground(primaryColor);
        UserDashboard.purchaseDetailslb.setForeground(textPrimaryColor);
        UserDashboard.iconDetailsDark.setVisible(true);
        UserDashboard.iconDetailsLight.setVisible(false);
    }//GEN-LAST:event_jLabel11MouseClicked

    private void btnHoanTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHoanTienActionPerformed
        if (txtIDPurchase.getText().isEmpty() || txtReceivedDate.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Thiếu id mua hàng hoặc ngày nhận");
        } else {
            String receivedDate = txtReceivedDate.getText();
            String currentDate = txtCurrentDate.getText();

            try {
                Date d1 = df.parse(receivedDate);
                Date d2 = df.parse(currentDate);

                long dateReceivedInMs = d1.getTime();
                long dateCurrentInMs = d2.getTime();
                long timeDiff = (dateCurrentInMs - dateReceivedInMs);
                long daysDiff = TimeUnit.DAYS.convert(timeDiff, TimeUnit.MILLISECONDS);
                System.out.println(daysDiff);

                if (daysDiff > 30) {
                    JOptionPane.showMessageDialog(this, "Rất tiếc thời gian hoàn tiền đã hết! \nÁp dụng hoàn tiền sau 30 ngày kể từ ngày nhận được..");
                } else {
                    int id = Integer.parseInt(txtIDPurchase.getText());
                    pd.refund(id);
                    TablePurchaseDetails.setModel(new DefaultTableModel(null, new Object[]{"ID mua", "ID sách", "Tên sách", "Số lượng", "Giá", "Tổng",
                        "Ngày mua", "Ngày nhận", "Tên nhà cung cấp", "Trạng thái"}));
                    pd.getProductsValue(TablePurchaseDetails, "", uId);
                    statistics.user(user.getUserId(String.valueOf(UserDashboard.userEmail.getText())));
                    clear();
                }
            } catch (ParseException ex) {
                Logger.getLogger(PurchaseDetails.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnHoanTienActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        for (double i = 0.1; i <= 1.0; i += 0.1) {
            String s = "" + i;
            float f = Float.parseFloat(s);
            this.setOpacity(f);
            try {

                Thread.sleep(40);
            } catch (InterruptedException ex) {
                Logger.getLogger(PurchaseDetails.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_formWindowOpened

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        xx = evt.getX();
        xy = evt.getY();// 2 cái trên làm di chuyển được trang  
    }//GEN-LAST:event_jPanel1MousePressed

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xx, y - xy);
    }//GEN-LAST:event_jPanel1MouseDragged

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clear();
    }//GEN-LAST:event_btnClearActionPerformed

    private void TablePurchaseDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablePurchaseDetailsMouseClicked
        model = (DefaultTableModel) TablePurchaseDetails.getModel();
        rowIndex = TablePurchaseDetails.getSelectedRow();
        txtIDPurchase.setText(model.getValueAt(rowIndex, 0).toString());
        if (model.getValueAt(rowIndex, 7) == null) {
            txtReceivedDate.setText(null);
        } else {
            txtReceivedDate.setText(model.getValueAt(rowIndex, 7).toString());
        }

    }//GEN-LAST:event_TablePurchaseDetailsMouseClicked

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        TablePurchaseDetails.setModel(new DefaultTableModel(null, new Object[]{"ID mua", "ID sách", "Tên sách", "Số lượng", "Giá", "Tổng",
            "Ngày mua", "Ngày nhận", "Tên nhà cung cấp", "Trạng thái"}));
        pd.getProductsValue(TablePurchaseDetails, txtSearch.getText(), uId);
    }//GEN-LAST:event_txtSearchKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablePurchaseDetails;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnHoanTien;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtCurrentDate;
    private javax.swing.JTextField txtIDPurchase;
    private javax.swing.JTextField txtReceivedDate;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
